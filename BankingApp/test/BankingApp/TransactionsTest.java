package BankingApp;// same package as the other classes in your project 

// add JAR file first >> look at Unit Testing Guide for more details

import org.junit.Test;
import static org.junit.Assert.*;
public class TransactionsTest {

    
    @Test
    public void testTotalAmount() {
        
        // here we are testing the getTotalAmount mothod 
        //>> to check that the values of all transactions are added correctly 

        // create an instance of the transaction class to add the first transaction
        // >> include the details you need to test >> so we need the transaction amount >> R2000.00
        Transactions transaction1 = new Transactions("Rent", null, null, 2000, null);
        // create an instance of the transaction class to add the second transaction
        // >> include the details you need to test >> so we need the transaction amount >> R500.00
        Transactions transaction2 = new Transactions("Rent2", null, null, 500, null);
        
        //create a variable to hold the expected/ correct total amount >> (the correct output should be given in the poe , along with the correct values for each task)
        double expectedtotalAmount = 2500;
        // create a variable to hold the actual total amount that is calculated in your class 
        double actualtotalAmount = transaction2.getTotalAmount(); // call the method to get the total amount for all transactions

        assertEquals(expectedtotalAmount, actualtotalAmount, 0);
        // assert equals allows you to compare your actual total amount calculated in your class with what the correct total amount is suppossed to be 

    }// end test 
    
    @Test
    public void testTotalAmountWithLoop() {
        // here we are testing the getTotalAmount mothod using a loop
//>> to check that the values of all transactions are added correctly 

        // first we will create an array to hold all values that need to be tested 
        //>> this is a container that holds 5 double values
        double [] additionalAmounts = {1000,125,50,75,45};
      
        Transactions transaction1 = null; // now create a null object to be used in the loop
       for (int i =0;i<5 ;i++)
      {
         transaction1 = new Transactions("Transaction",null,null, additionalAmounts[i], null);
         // call this value from the array to create the transatction object 
         //>> eg additionalAmounts[0] = 10 and additionalAmounts[4] = 1
      }// end i loop
        
        double expectedtotalAmount = 1295; // added all expected values
        double actualtotalAmount = transaction1.getTotalAmount(); // call method to get total amount
        assertEquals(expectedtotalAmount, actualtotalAmount, 0);
        // assert equals allows you to compare your actual total amount calculated in your class 
        //with what the correct total amount is suppossed to be 
    }// end test 
    
    @Test
    public void testGenerateID() {
        // create an instance of the transaction class >> include the details you need to test
        // here we are testing the generateID method >> so we need the transaction name and number
        // transaction number is autogenerated >> so we will only need our transaction name >> RENT
        Transactions transaction = new Transactions("Rent", null, null, 0, null);
        // create a variable to hold the actual ID that is created by your method 
        String actualID = transaction.getTransactionID(); // here we called the method we are testing >> generateID
        //create a variable to hold the expected/ correct ID >> (the correct output should be given in the poe)
        String expectedID = "Ren#3*"; // add your correct value >> here it should be Ren#3*
        //>> since we are taking the first 3 characters from Rent >> Ren >> adding an # 
        // >> adding the transaction number >> his is the third transaction for the test therefore the number will be 3
        // >> then adding a * >> so the correct id is Ren#3*
        assertEquals(expectedID, actualID); 
// assert equals allows you to compare your actual ID generated by the method with what the correct ID is suppossed to be 

    }// end test

   
   

    
   
    
    
    

    
   
    

    
    
}// end unit testing class 
